{"version":3,"sources":["lib/middleWare/handleContentType.js","lib/apiConfig.js","lib/utils.js","lib/composeMiddleWare.js","layouts/GlobalStore/modules/globalStore.js","routes/Home/modules/topNavBar.js","store/reducers.js","store/createStore.js","serviceWorker.js","layouts/GlobalStore/GlobalStore.js","layouts/GlobalStore/index.js","layouts/PageLayout/index.js","container/App.js","routes/Home/components/TopNavBar.js","lib/decorators.js","routes/Home/containers/TopNavBarContainer.js","routes/Home/index.js","routes/Home/components/HomeView.js","routes/Counter/index.js","routes/index.js","index.js","routes/Home/components/TopNavBar.less","media/logo.svg"],"names":["handleContentType","cb","ctx","Object","prototype","toString","call","options","body","method","headers","assign","enctype","filter","preApi","Content-Type","url","concat","encodeURIComponent","parseBody","cacheError","env","process","development","production","fetchUrl","filterErrorCodeArray","fetchAPI","_len","arguments","length","args","Array","_key","context","middleWare","keys","actions","forEach","key","fn","push","dispatch","i","apply","fetchAction","_ref","tempUrl","split","indexOf","fetch","then","response","splice","checkStatus","checkFileType","checkCode","apiMiddleWare","store","next","action","code","type","toast_default","a","fail","error","JSON","stringfy","hide","Code","handleError","status","json","contentType","get","blob","document","createElement","window","URL","createObjectURL","filename","replace","href","download","decodeURIComponent","click","revokeObjectURL","undefined","Error","stringify","handleAPI","_ref2","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","loading","abrupt","sent","t0","stop","_x","_x2","this","getGlobalInitInfoAPI","_ref3","_callee2","payload","_context2","ACTION_HANDLERS","defineProperty","state","appInfo","initialState","appName","globalStoreReducer","handler","getCategoryDataAPI","category","topNavBarReducer","history","createBrowserHistory","makeRootReducer","asyncReducers","combineReducers","objectSpread","router","connectRouter","componentsReducer","createStore","middleware","thunk","routerMiddleware","composeEnhancers","compose","createReduxStore","applyMiddleware","Boolean","location","hostname","match","Fragment","React","GlobalStore","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","hasError","getGlobalInitInfo","info","setState","react_default","children","Component","mapDispatchToProps","params","date","Date","getTime","Result","connect","globalStore","PageLayout","layouts_GlobalStore","App","react_redux_es","esm","layouts_PageLayout","react_router_dom","react","fallback","react_router","routes","map","r","render","component","exact","path","TopNavBar","onOpenChange","drawerOpen","onToggleCallback","renderSideBar","TopNavBar_Fragment","className","Styles","topNavBar","item","index","firstClassIndex","id","onClick","handleFirstClassClick","name","getCategoryData","nav_bar_default","icon","icon_default","onLeftClick","src","alt","drawer_default","style","minHeight","documentElement","clientHeight","sidebar","open","defaultProps","shouldComponentUpdate","nextProps","nextState","Immutable","is","fromJS","HomeView","handleTopNavBarToggle","prevState","topNavBarOpen","TopNavBarContainer","to","fontSize","height","logoImg","PureComponent","AsyncComponent","CounterContainer","lazy","__webpack_require__","e","bind","counterReducer","default","reducer","hasOwnProperty","replaceReducer","injectReducer","createRoutes","Home","Counter","__INITIAL_STATE__","MOUNT_NODE","getElementById","ReactDOM","container_App","navigator","serviceWorker","ready","registration","unregister","module","exports","drawer-container","my-drawer","top-navbar","tmall-img","category-title","category-container","left-ul","item-active","item-closed","right-div","p"],"mappings":"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","file":"static/js/main.da243d4e.chunk.js","sourcesContent":["import { preApi, parseBody } from '../utils'\n\nexport default function handleContentType(cb, ctx) {\n  const bodyType = Object.prototype.toString.call(ctx.options.body);\n  if (bodyType === '[object FormData]') {\n    ctx.options.method = 'POST';\n    ctx.options.headers = Object.assign({}, ctx.options.headers, {\n      enctype: 'multipart/form-data'\n    });\n  } else {\n    switch (ctx.filter) {\n      case preApi:\n        /**\n         * 暂无服务端时，使用Get方式请求json假数据\n         * @type {string}\n         */\n        ctx.options.method = 'GET';\n        ctx.options.headers = {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        };\n        ctx.url = ctx.url + '.json';\n        if (ctx.options.body) {\n          ctx.options.body = `Body=${encodeURIComponent(parseBody(ctx.options.body))}`;\n        }\n        break;\n      default:\n        ctx.options.headers = {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        };\n        if (ctx.options.body) {\n          ctx.options.body = `Body=${encodeURIComponent(parseBody(ctx.options.body))}`;\n        }\n        break;\n    }\n  }\n  return cb(ctx);\n}\n","const apiConfig = {\n  development: 'http://172.90.13.175:3000/',\n  production: 'http://172.90.13.175:5000/'\n};\nexport default apiConfig;\n","import 'whatwg-fetch';\nimport composeMiddleWare from './composeMiddleWare';\nimport apiConfig from './apiConfig';\nimport { Toast } from 'antd-mobile';\n\nconst env = process.env.NODE_ENV || 'development';\n\nexport const preApi = apiConfig[env];\n\nlet cacheError;\n\nconst fetchUrl = []\n\nconst filterErrorCodeArray = [-700];\n\n/**\n * 请求发出之前要先经过中间件处理\n * args包括url和options\n * composeMiddleWare 加载遍历中间件\n */\nexport const fetchAPI = (...args) => composeMiddleWare(fetchAction, preApi, ...args);\n\nfunction fetchAction({ filter, url, options }) {\n  let tempUrl = '';\n  if (options.method !== 'GET') {\n    tempUrl = options.method + url.split('?')[0];\n    if (fetchUrl.indexOf(tempUrl) !== -1) {\n      return;\n    }\n    fetchUrl.push(tempUrl);\n  }\n  cacheError = '';\n  if (options.method === 'GET' && options.body) {\n    url += `?${options.body}`;\n    delete options.body;\n  }\n  return fetch(filter + url, options)\n    .then((response) => {\n      if (options.method !== 'GET') {\n        const i = fetchUrl.indexOf(tempUrl);\n        if (i !== -1) fetchUrl.splice(i, 1)\n      }\n      return response;\n    })\n    .then(checkStatus)\n    .then(checkFileType)\n    .then(checkCode)\n}\n\nexport const apiMiddleWare = store => next => (action) => {\n  if (cacheError) {\n    if (cacheError.code === -700) {\n      next({\n        type: 'TOKEN_INVALID'\n      });\n      Toast.fail('Token失效', 3, () => {}, true);\n    } else {\n      next({\n        type: 'ERROR',\n        error: cacheError\n      });\n      env === 'development' && console.log('ERROR', cacheError);\n      Toast.fail(JSON.stringfy(cacheError), 3, () => {}, true);\n    }\n  } else {\n    next({\n      type: 'GLOBAL_LOADING',\n      response: '2'\n    });\n    Toast.hide();\n  }\n  next(action)\n};\n\nfunction checkCode(response) {\n  if (response.Code !== 0) {\n    return handleError(response.Code, response);\n  }\n  return response;\n}\n\nfunction checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n  return response.json().then(json => handleError(response.status, json));\n}\n\nfunction checkFileType(response) {\n  const contentType = response.headers.get('content-type');\n  if (contentType === 'text/csv' || contentType.indexOf('application/octet-stream') !== -1) {\n    response.blob().then((blob) => {\n      const a = document.createElement('a');\n      const url = window.URL.createObjectURL(blob);\n      const fileNameStr = response.headers.get('content-disposition');\n      const filename = fileNameStr.replace(/attachment;\\s*filename=/, ''); // based on response HEADER\n      a.href = url;\n      a.download = decodeURIComponent(filename);\n      a.click();\n      window.URL.revokeObjectURL(url);\n    });\n    return { Code: 0 };\n  }\n\n  // otherwise it's a json response\n  return response.json();\n}\n\nfunction handleError(code, response = '') {\n  const error = new Error();\n  error.code = code;\n  error.response = response;\n  if (filterErrorCodeArray.indexOf(code) !== -1) {\n    cacheError = error;\n  }\n  throw error;\n}\n\nexport function parseBody(body) {\n  const type = Object.prototype.toString.call(body);\n  if (type === '[object Null]' || type === '[object Undefined]' || type === '[object FormData]') {\n    body = '';\n  }\n  if (type === '[object Object]' || type === '[object Array]') {\n    body = JSON.stringify(body);\n  }\n  return body;\n}\n\nexport const handleAPI = async (fn, dispatch) => {\n  try {\n    await dispatch({\n      type: 'GLOBAL_LOADING',\n      response: '1'\n    });\n    env === 'development' && console.log('GLOBAL_LOADING', '1');\n    Toast.loading('加载中...', 0, () => {}, true);\n    return await fn.call();\n  } catch (error) {\n    await dispatch({\n      type: 'ERROR',\n      error,\n    });\n    env === 'development' && console.log('ERROR', error);\n    Toast.fail(JSON.stringify(error), 3, () => {}, true);\n  }\n}\n\n","import * as actions from './middleWare'\n\nexport default function composeMiddleWare(cb, filter, url, options) {\n  const context = { filter, url, options };\n  const middleWare = [];\n\n  Object.keys(actions).forEach((key) => {\n    const fn = actions[key];\n    if (typeof fn === 'function') middleWare.push(fn);\n  })\n  return dispatch(0)(context)\n\n  function dispatch(i) {\n    return (ctx) => {\n      const fn = middleWare[i];\n      if (!fn) return cb(ctx);\n      return fn(dispatch(i + 1), ctx)\n    }\n  }\n}\n","import { handleAPI, fetchAPI } from 'lib/utils';\n// ------------------------------------\n// Constants\n// ------------------------------------\nexport const GLOBAL_INIT = 'GLOBAL_INIT'\nexport const GLOBAL_INIT_SUCCESS = 'GLOBAL_INIT_SUCCESS'\n\n// ------------------------------------\n// Actions\n// ------------------------------------\nexport const getGlobalInitInfo = (params) => {\n  return (dispatch) => {\n    handleAPI(async () => {\n      await dispatch({\n        type: GLOBAL_INIT\n      });\n\n      const response = await getGlobalInitInfoAPI({\n        payload: {\n          date: new Date().getTime()\n        }\n      });\n      await dispatch({\n        type: GLOBAL_INIT_SUCCESS,\n        appInfo: response.Result\n      });\n    }, dispatch);\n  }\n}\n\nconst getGlobalInitInfoAPI = async ({ payload }) => {\n  return await fetchAPI('api/global/version', {\n    method: 'GET',\n    body: payload\n  });\n}\n\n// ------------------------------------\n// Action Handlers\n// ------------------------------------\nconst ACTION_HANDLERS = {\n  [GLOBAL_INIT_SUCCESS] : (state, action) => {\n    return Object.assign({}, state, {\n      appInfo: action.appInfo\n    })\n  }\n}\n\n// ------------------------------------\n// Reducer\n// ------------------------------------\nconst initialState = {\n  appName: 'tmall',\n  appInfo: ''\n};\nexport default function globalStoreReducer (state = initialState, action) {\n  const handler = ACTION_HANDLERS[action.type]\n\n  return handler ? handler(state, action) : state\n}\n","import { handleAPI, fetchAPI } from 'lib/utils';\n// ------------------------------------\n// Constants\n// ------------------------------------\nexport const GET_CATEGORY_DATA = 'GET_CATEGORY_DATA';\nexport const GET_CATEGORY_DATA_SUCCESS = 'GET_CATEGORY_DATA_SUCCESS';\n\n// ------------------------------------\n// Actions\n// ------------------------------------\nexport const getCategoryData = () => {\n  return (dispatch) => {\n    handleAPI(async () => {\n      await dispatch({\n        type: GET_CATEGORY_DATA\n      });\n\n      const response = await getCategoryDataAPI();\n      await dispatch({\n        type: GET_CATEGORY_DATA_SUCCESS,\n        category: response.Result.category\n      });\n    }, dispatch);\n  }\n}\n\nconst getCategoryDataAPI = async () => {\n  return await fetchAPI('api/global/category', {\n    method: 'GET'\n  });\n}\n\n// ------------------------------------\n// Action Handlers\n// ------------------------------------\nconst ACTION_HANDLERS = {\n  [GET_CATEGORY_DATA_SUCCESS] : (state, action) => {\n    return Object.assign({}, state, {\n      category: action.category\n    })\n  }\n}\n\n// ------------------------------------\n// Reducer\n// ------------------------------------\nconst initialState = {\n  category: []\n};\nexport default function topNavBarReducer(state = initialState, action) {\n  const handler = ACTION_HANDLERS[action.type]\n\n  return handler ? handler(state, action) : state\n}\n","import { combineReducers } from 'redux'\n// import locationReducer from './location'\nimport { connectRouter } from 'connected-react-router'\nimport { createBrowserHistory } from 'history'\nimport * as componentsReducer from './componentsReducer'\n\nexport const history = createBrowserHistory();\n\nexport const makeRootReducer = (asyncReducers) => {\n  return combineReducers({\n    router: connectRouter(history),\n    // location: locationReducer,\n    ...componentsReducer,\n    ...asyncReducers\n  })\n};\n\nexport const injectReducer = (store, { key, reducer }) => {\n  if (Object.hasOwnProperty.call(store.asyncReducers, key)) return;\n  store.asyncReducers[key] = reducer;\n  store.replaceReducer(makeRootReducer(store.asyncReducers));\n};\n\nexport default makeRootReducer\n","import { applyMiddleware, compose, createStore as createReduxStore } from 'redux'\nimport { routerMiddleware } from 'connected-react-router'\nimport thunk from 'redux-thunk'\n// import { BrowserRouter } from 'react-router-dom';\nimport makeRootReducer, {history} from './reducers'\n// import { updateLocation } from './location'\nimport { apiMiddleWare } from 'lib/utils';\n\n\nconst createStore = (initialState = {}) => {\n  // ======================================================\n  // Middleware Configuration\n  // ======================================================\n  const middleware = [thunk, routerMiddleware(history), apiMiddleWare];\n\n  // ======================================================\n  // Store Enhancers\n  // ======================================================\n  const enhancers = [];\n  let composeEnhancers = compose;\n\n  // ======================================================\n  // Store Instantiation and HMR Setup\n  // ======================================================\n  const store = createReduxStore(\n    makeRootReducer(),\n    initialState,\n    composeEnhancers(\n      applyMiddleware(...middleware),\n      ...enhancers\n    )\n  );\n  store.asyncReducers = {};\n\n  // To unsubscribe, invoke `store.unsubscribeHistory()` anytime\n  // store.unsubscribeHistory = BrowserRouter.listen(updateLocation(store))\n\n  return store\n};\n\nexport default createStore\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Toast} from 'antd-mobile';\n\nconst Fragment = React.Fragment;\n\nexport default class GlobalStore extends React.Component {\n  static propTypes = {\n    globalStore: PropTypes.object,\n    children: PropTypes.node.isRequired,\n    getGlobalInitInfo: PropTypes.func\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    }\n  }\n\n  componentDidMount() {\n    this.props.getGlobalInitInfo();\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      hasError: true\n    });\n    Toast.info('出错了！（来自\"错误边界\"的提示）')\n  }\n\n  render() {\n    // if (this.state.hasError) {\n    //   return '页面崩溃了...刷新试试吧！'\n    // }\n    return <Fragment>\n      {this.props.children}\n    </Fragment>\n  }\n}\n","import { connect } from 'react-redux';\nimport GlobalStore from './GlobalStore';\nimport { getGlobalInitInfo } from './modules/globalStore';\n\nconst mapDispatchToProps = {\n  getGlobalInitInfo\n}\n\nconst mapStateToProps = state => ({\n  globalStore: state.globalStore\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GlobalStore)\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport GlobalStore from '../GlobalStore';\n\nexport const PageLayout = ({ children }) => (\n  <GlobalStore>\n    {children}\n  </GlobalStore>\n)\nPageLayout.propTypes = {\n  children: PropTypes.node,\n}\n\nexport default PageLayout\n","import React, {Suspense} from 'react'\n// import { Router } from 'react-router'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { ConnectedRouter } from 'connected-react-router'\nimport { Provider } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport PageLayout from 'layouts/PageLayout';\n\nclass App extends React.Component {\n  static propTypes = {\n    store: PropTypes.object.isRequired,\n    routes: PropTypes.array.isRequired,\n    history: PropTypes.object.isRequired\n  };\n\n  shouldComponentUpdate () {\n    return false\n  }\n\n  render () {\n    return (\n      <Provider store={this.props.store}>\n        <ConnectedRouter history={this.props.history}>\n          <PageLayout>\n            <BrowserRouter>\n              <Suspense fallback={<div>Loading...</div>}>\n                <Switch>\n                  {\n                    this.props.routes.map((r, key) => {\n                      return (\n                        <Route\n                          render={(props) => (<r.component store={this.props.store} {...props} />)}\n                          exact={!!r.exact}\n                          key={r.path + key}\n                          path={r.path}\n                        />\n                      )\n                    })\n                  }\n                </Switch>\n              </Suspense>\n            </BrowserRouter>\n          </PageLayout>\n        </ConnectedRouter>\n        {/*<Router history={this.props.history} children={this.props.routes} />*/}\n      </Provider>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport {shouldComponentUpdate} from 'lib/decorators';\nimport {Drawer, NavBar, Icon} from 'antd-mobile';\nimport PropTypes from 'prop-types';\nimport Styles from './TopNavBar.less';\n\nconst Fragment = React.Fragment;\n\nexport default @shouldComponentUpdate\nclass TopNavBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      drawerOpen: false,\n      firstClassIndex: 0\n    };\n  }\n\n  static propTypes = {\n    topNavBar: PropTypes.object,\n    getCategoryData: PropTypes.func,\n    onToggleCallback: PropTypes.func,\n    children: PropTypes.node\n  };\n\n  static defaultProps = {};\n\n  componentDidMount() {\n    this.props.getCategoryData();\n  }\n\n  onOpenChange = () => {\n    this.setState({drawerOpen: !this.state.drawerOpen});\n    if (Object.prototype.toString.call(this.props.onToggleCallback === \"[object Function]\")){\n      this.props.onToggleCallback();\n    }\n  }\n\n  renderSideBar = () => {\n    return (<Fragment>\n      <div className={Styles['category-title']}><h3>全部分类</h3></div>\n      <div className={Styles['category-container']}>\n        <ul className={Styles['left-ul']}>\n          {this.props.topNavBar.category.map((item, index) => {\n            return (\n              <li\n                className={this.state.firstClassIndex === index ? Styles['item-active'] : Styles['item-closed']}\n                key={`first-class-${item.id}`}\n                onClick={this.handleFirstClassClick(index)}\n              >{item.name}</li>\n            )\n          })}\n        </ul>\n        <div className={Styles['right-div']}>\n\n        </div>\n      </div>\n    </Fragment>);\n  }\n\n  handleFirstClassClick = (index) => () => {\n    this.setState({\n      firstClassIndex: index\n    })\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <NavBar icon={<Icon type=\"ellipsis\"/>} onLeftClick={this.onOpenChange} className={Styles['top-navbar']}>\n          <img\n            src={'//gw.alicdn.com/tfs/TB1wQw8qamWBuNjy1XaXXXCbXXa-237-41.png_240x10000.jpg_.webp'}\n            alt={'天猫Tmall'} className={Styles['tmall-img']}\n          />\n        </NavBar>\n        <div className={Styles['drawer-container']}>\n          <Drawer\n            className={Styles[\"my-drawer\"]}\n            style={{minHeight: document.documentElement.clientHeight}}\n            // enableDragHandle\n            sidebar={this.renderSideBar()}\n            open={this.state.drawerOpen}\n            onOpenChange={this.onOpenChange}\n          >\n            {this.props.children}\n          </Drawer>\n        </div>\n      </Fragment>\n    );\n  }\n}\n","import Immutable from 'immutable';\n\nexport function shouldComponentUpdate(target) {\n  target.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n    return !Immutable.is(Immutable.fromJS(nextProps), Immutable.fromJS(this.props)) ||\n      !Immutable.is(Immutable.fromJS(nextState), Immutable.fromJS(this.state))\n  }\n}\n","import { connect } from 'react-redux'\nimport { getCategoryData } from '../modules/topNavBar'\n\n/*  This is a container component. Notice it does not contain any JSX,\n    nor does it import React. This component is **only** responsible for\n    wiring in the actions and state necessary to render a presentational\n    component - in this case, the counter:   */\n\nimport TopNavBar from '../components/TopNavBar'\n\n/*  Object of action creators (can also be function that returns object).\n    Keys will be passed as props to presentational components. Here we are\n    implementing our wrapper around increment; the component doesn't care   */\n\nconst mapDispatchToProps = {\n  getCategoryData\n}\n\nconst mapStateToProps = (state) => ({\n  topNavBar : state.topNavBar\n})\n\n/*  Note: mapStateToProps is where you should use `reselect` to create selectors, ie:\n\n    import { createSelector } from 'reselect'\n    const counter = (state) => state.counter\n    const tripleCount = createSelector(counter, (count) => count * 3)\n    const mapStateToProps = (state) => ({\n      counter: tripleCount(state)\n    })\n\n    Selectors can compute derived data, allowing Redux to store the minimal possible state.\n    Selectors are efficient. A selector is not recomputed unless one of its arguments change.\n    Selectors are composable. They can be used as input to other selectors.\n    https://github.com/reactjs/reselect    */\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopNavBar)\n","import HomeView from './components/HomeView'\n\n// Sync route definition\nexport default HomeView;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './HomeView.less';\nimport TopNavBar from '../containers/TopNavBarContainer';\nimport logoImg from 'media/logo.svg';\n\nexport default class HomeView extends React.PureComponent{\n  constructor(props) {\n    super(props);\n    this.state = {\n      topNavBarOpen: false\n    }\n  }\n\n  handleTopNavBarToggle = () => {\n    this.setState((prevState, props) => {\n      return {\n        topNavBarOpen: !prevState.topNavBarOpen\n      }\n    })\n  };\n\n  render() {\n    return [\n      <TopNavBar key={'TopNavBar'} onToggleCallback={this.handleTopNavBarToggle}>\n        <Link to={'/counter'} key={'counter'} style={{fontSize: '22px'}}>counter</Link>\n        <div style={{height: '10000px'}} key='test'>index1</div>\n        <img src={logoImg} alt='' key='img' />\n      </TopNavBar>\n    ];\n  }\n};\n","import { injectReducer } from '../../store/reducers';\n// import CounterContainer from './containers/CounterContainer';\n// import counterReducer from './modules/counter';\nimport React, { lazy } from 'react';\n\nconst AsyncComponent = ({ store }) => {\n  const CounterContainer = lazy(() => import(/* webpackChunkName: 'counter' */'./containers/CounterContainer'));\n  import(/* webpackChunkName: 'counter' */'./modules/counter').then(({ default: counterReducer }) => {\n    injectReducer(store, { key: 'counter', reducer: counterReducer });\n  });\n  return <CounterContainer />;\n};\n\nexport default AsyncComponent;\n\n// const CounterContainer = await import(/* webpackChunkName: 'counter' */'./containers/CounterContainer');\n// const counterReducer = await import(/* webpackChunkName: 'counter' */'./modules/counter');\n// injectReducer(store, { key: 'counter', counterReducer });\n// return CounterContainer;\n","// We only need to import the modules necessary for initial render\nimport Home from './Home'\nimport Counter from './Counter'\n\n/*  Note: Instead of using JSX, we recommend using react-router\n    PlainRoute objects to build route definitions.   */\n\nexport const createRoutes = (store) => ([\n  {\n    path: '/',\n    exact: true,\n    render: Home\n  },\n  {\n    path: '/counter',\n    exact: true,\n    component: Counter\n  },\n\n]);\n\n/*  Note: childRoutes can be chunked or otherwise loaded programmatically\n    using getChildRoutes with the following signature:\n\n    getChildRoutes (location, cb) {\n      require.ensure([], (require) => {\n        cb(null, [\n          // Remove imports!\n          require('./Counter').default(store)\n        ])\n      })\n    }\n\n    However, this is not necessary for code-splitting! It simply provides\n    an API for async route definitions. Your code splitting should occur\n    inside the route `getComponent` function, since it is only invoked\n    when the route exists and matches.\n*/\n\nexport default createRoutes\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.less';\nimport createStore from './store/createStore';\nimport {history} from \"./store/reducers\";\nimport * as serviceWorker from './serviceWorker';\nimport App from './container/App';\nimport createRoutes from './routes/index';\n\nconst store = createStore(window.__INITIAL_STATE__);\nconst routes = createRoutes(store);\nconst MOUNT_NODE = document.getElementById('root');\n\nlet render = () => {\n  ReactDOM.render(\n    <App store={store} routes={routes} history={history} />,\n    MOUNT_NODE\n  )\n};\n// Development Tools\n// ------------------------------------\nif (process.env.NODE_ENV === 'development') {\n  if (module.hot) {\n    render();\n    // const renderApp = render\n    //\n    // render = () => {\n    //   try {\n    //     renderApp()\n    //   } catch (e) {\n    //     console.error(e)\n    //   }\n    // }\n\n    // Setup hot module replacement\n    module.hot.accept([\n        './container/App',\n      ], () =>\n        setImmediate(() => {\n          ReactDOM.unmountComponentAtNode(MOUNT_NODE)\n          render()\n        })\n    )\n  }\n}\n\n// Let's Go!\n// ------------------------------------\nif (process.env.NODE_ENV !== 'test') render();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"drawer-container\":\"TopNavBar__drawer-container--3Af1i\",\"my-drawer\":\"TopNavBar__my-drawer--tBIJo\",\"top-navbar\":\"TopNavBar__top-navbar--vg6I7\",\"tmall-img\":\"TopNavBar__tmall-img--1jqWW\",\"category-title\":\"TopNavBar__category-title--U86Q4\",\"category-container\":\"TopNavBar__category-container--1trdZ\",\"left-ul\":\"TopNavBar__left-ul--2vDns\",\"item-active\":\"TopNavBar__item-active--3xXxD\",\"item-closed\":\"TopNavBar__item-closed--2xO4S\",\"right-div\":\"TopNavBar__right-div--3Thwy\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}